Longer Term
-----------
- Move to HTTPS
- Add authentication
- Add ACL to limit where management requests can come from
- Add management API to poller
- Add grouping of oids by device to a poller and then to a poller process
- Add script to be run periodically to re-allocate oids assigned to disabled pollers
- Add OpenTSDB storage option
- Add file based storage option
- Figure out to to test client getApiEndPoint() in SubfragiumClientLib.py
- Add additional filters for list pollers and list targets
- Add additional testing for searching by fields in list oids

TODO
----
- Need to fix daemon currently it exits in the daemon library when it checks if pid > 0
- Add testing of SubfragiumPoller
- Add internal statistics reporting (cycle time, num processes, failures etc)
- Turn poller fields in a dictionary as there are too many fields
- Add more validation in testSubfragiumClientLib.py on list functions to validate data is properly returne
- Add more validation of HTTP failures in testSubfragiumClientLib.py
- Timeout parameter of oid is not returned from GET /oid like it is in GET /oids
- Remove redundant code from testSubfragiumClientLib.py
    - Loop over bad fields
    - Loop over missing fields

COMPLETE
--------
- Rename files as
    SubfragiumDBAPI.py -> SubfragiumDBLib.py
    SubfragiumAPISchema.py -> SubfragiumControllerSchema.py
- Add target -> oid reference in DataModel
- Rename files as
    SubfragiumUtils.py -> SubfragiumServerUtils.py
    (Would provide Server / Client Separation but require duplication of code)
- Use escaping to fix the paths in the OID names
- Add cycle time to poller
- Add graphite server details to poller API
- Separate SubfragiumCli into a CLI tool and a SubfragiumClientLib.py
- Add Schema for SubfragiumDBAPI.getOidsQuery
- Change Cli to parse out arguments one by one to simplify CLI
  Or maybe just allow the CLI to change a single item at at time?
- Add searching for oids to poll through search parameters
- Add CLI to specify poller name
- Add timeout parameter for target or maybe oid?
- Add daemon and foreground for poller
- Remove all traces of 'Ping' from variable names / functions
- Add parameter to disable poller
- Add disabling of oid in poller if there are > threshold of failed polls
- Change debug statement so poller distribution across pollers to individual log statements
- Modify logging in SubfragiumPoller to not log as SubfragiumController
- Change list <item> all to be minimal and list item <specifics> to vertical format
- Add fields to poller to support changing the threshold and hold down for target/oids
- Change cycle time to use configured variable rather than static 5 seconds
- Move all the configuration items into config dictionary
- Fix changes to flask sqlalchemy that make it report warnings about outputing logs of sql
    - Maybe an update to the library dependencies
- Fix printing of help for list pollers, list oid, list target
- Need to get to the bottom of the following error:
  /home/pdd/PythonVEnv/Subfragium/local/lib/python2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.sqlalchemy is deprecated, use flask_sqlalchemy instead.
- Split out SubfragiumPoller functions into SubfragiumPollerLib
- Check using daemon setting in the process initialisation to ensure child processes shutdown
- Stop the setting of numProcesses under the minProcesses in the controller
- In testSubfragiumClientLib.py the apiEndpoints passed into the failing functions is technically wrong should be apiEndPointsUrls


